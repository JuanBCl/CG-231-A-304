<!DOCTYPE html>
<html lang="en-GB">

<head>
  <meta charset="utf-8" />
  <title>Figura 3D mas de 10 caras</title>
  <style>
    body {
      margin: 0;
    }
  </style>
</head>

<body>
  <script type="module">
    import * as THREE from 'https://sebastiann16.github.io/CompG/three.module.js';
    import { OrbitControls } from 'https://sebastiann16.github.io/CompG/OrbitControls.js';
  
    var WIDTH = window.innerWidth;
    var HEIGHT = window.innerHeight;

    var renderer = new THREE.WebGLRenderer({ antialias: true });
    renderer.setSize(WIDTH, HEIGHT);
    renderer.setClearColor(0xDDDDDD, 1);
    document.body.appendChild(renderer.domElement);

    var scene = new THREE.Scene();

    var size = 500;
        var divisions = 100;
        var origin = new THREE.Vector3( 0, 0, 0 );
        var x = new THREE.Vector3( 1, 0, 0 );
        var y = new THREE.Vector3( 0, 1, 0 );
        var z = new THREE.Vector3( 0, 0, 1 );
        var color2 = new THREE.Color( 0x333333 );  /// 0x333333
        var colorR = new THREE.Color( 0xAA0000 );
        var colorG = new THREE.Color( 0x00AA00 );
        var colorB = new THREE.Color( 0x0000AA );

        //Crear la Grilla
        var gridHelperXZ = new THREE.GridHelper( size, divisions, color2, color2);
        gridHelperXZ.position.y = -1;
        scene.add(gridHelperXZ);

    var camera = new THREE.PerspectiveCamera(80, WIDTH / HEIGHT);
    camera.position.z = 1; //z
    camera.position.y = 3; //y
    camera.position.x = -10;
    scene.add(camera);
    const light = new THREE.AmbientLight(0x505050, 50);
    scene.add(light);
    const controls = new OrbitControls(camera, renderer.domElement);

    const geometry = new THREE.BufferGeometry();
    const vr=[];

    function poligono(lados, radio){
        const ang= (2*Math.PI)/lados;
        for(var i=0;i<lados;i++){
            const x = radio*Math.cos(ang*i);
            const y = radio*Math.sin(ang*i);
            vr.push([x,y]);
        }
        return vr;
    }

    function prisma(lados, radio, altura ){
        const vertices=[];
        for(var i=0;i<vertices.length;i++){
            
        }
        return vertices;
    }



    function animate() {

    requestAnimationFrame(animate);
    controls.update();
    renderer.render(scene, camera)
    }
    animate();


</script>
</body>
</html>